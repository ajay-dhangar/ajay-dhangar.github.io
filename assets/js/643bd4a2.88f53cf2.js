"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[3147],{2849:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var i=a(97815),o=a(74848),r=a(28453);const n={title:" Git Best Practices: Commit Often, Perfect Later, Publish Once",sidebar_label:"Git Best Practicies",authors:["ajay-dhangar"],tags:["git","best practicies"],date:new Date("2024-03-15T14:37:46.000Z"),hide_table_of_contents:!0},s=void 0,c={authorsImageUrls:[void 0]},l=[];function u(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,o.jsx)(t.p,{children:"Git is a powerful tool for managing the development of software projects, but it can be challenging to use effectively. In this article, we'll take a look at some best practices for using Git, including how to structure your commits, how to manage branches, and how to collaborate with others. By following these best practices, you can make your development process more efficient and less error-prone."})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>s});var i=a(96540);const o={},r=i.createContext(o);function n(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),i.createElement(r.Provider,{value:t},e.children)}},97815:e=>{e.exports=JSON.parse('{"permalink":"/blog/git-best-practicies","editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/blog/git-best-practicies.md","source":"@site/blog/git-best-practicies.md","title":" Git Best Practices: Commit Often, Perfect Later, Publish Once","description":"Git is a powerful tool for managing the development of software projects, but it can be challenging to use effectively. In this article, we\'ll take a look at some best practices for using Git, including how to structure your commits, how to manage branches, and how to collaborate with others. By following these best practices, you can make your development process more efficient and less error-prone.","date":"2024-03-15T14:37:46.000Z","tags":[{"inline":true,"label":"git","permalink":"/blog/tags/git"},{"inline":true,"label":"best practicies","permalink":"/blog/tags/best-practicies"}],"readingTime":4.245,"hasTruncateMarker":true,"authors":[{"name":"Ajay Dhangar","url":"https://github.com/ajay-dhangar","imageURL":"https://avatars.githubusercontent.com/u/99037494?v=4","key":"ajay-dhangar","page":null}],"frontMatter":{"title":" Git Best Practices: Commit Often, Perfect Later, Publish Once","sidebar_label":"Git Best Practicies","authors":["ajay-dhangar"],"tags":["git","best practicies"],"date":"2024-03-15T14:37:46.000Z","hide_table_of_contents":true},"unlisted":false,"prevItem":{"title":"Getting Started with React and Vite","permalink":"/blog/getting-started-with-vite"},"nextItem":{"title":"Sed: Normalize markdown file with Regex","permalink":"/blog/sed-normalize-md-file-with-regex"}}')}}]);