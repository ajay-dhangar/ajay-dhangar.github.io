"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[28252],{57240:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>k,frontMatter:()=>h,metadata:()=>o,toc:()=>f});const o=JSON.parse('{"id":"react-js/advanced-level/beyond-the-basics/lesson-1","title":"React Hooks in Depth (useEffect, useContext, useReducer, etc.)","description":"In this lesson, we will learn about React Hooks in depth. We will learn about useEffect, useContext, useReducer, and other hooks. We will also learn how to create custom hooks in React.","source":"@site/courses/react-js/advanced-level/beyond-the-basics/lesson_1.md","sourceDirName":"react-js/advanced-level/beyond-the-basics","slug":"/react-js/advanced-level/beyond-the-basics/lesson-1","permalink":"/courses/react-js/advanced-level/beyond-the-basics/lesson-1","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"courses","permalink":"/courses/tags/courses"},{"inline":true,"label":"react-js","permalink":"/courses/tags/react-js"},{"inline":true,"label":"advanced-level","permalink":"/courses/tags/advanced-level"},{"inline":true,"label":"beyond-the-basics","permalink":"/courses/tags/beyond-the-basics"},{"inline":true,"label":"hooks","permalink":"/courses/tags/hooks"},{"inline":true,"label":"useEffect","permalink":"/courses/tags/use-effect"},{"inline":true,"label":"useContext","permalink":"/courses/tags/use-context"},{"inline":true,"label":"useReducer","permalink":"/courses/tags/use-reducer"},{"inline":true,"label":"custom-hooks","permalink":"/courses/tags/custom-hooks"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1713291103000,"sidebarPosition":1,"frontMatter":{"id":"lesson-1","title":"React Hooks in Depth (useEffect, useContext, useReducer, etc.)","sidebar_label":"Lesson - 1","sidebar_position":1,"description":"In this lesson, we will learn about React Hooks in depth. We will learn about useEffect, useContext, useReducer, and other hooks. We will also learn how to create custom hooks in React.","tags":["courses","react-js","advanced-level","beyond-the-basics","hooks","useEffect","useContext","useReducer","custom-hooks"]},"sidebar":"tutorialSidebar","previous":{"title":"Module 14: Beyond the Basics (Optional)","permalink":"/courses/category/module-14-beyond-the-basics-optional"},"next":{"title":"Lesson - 2","permalink":"/courses/react-js/advanced-level/beyond-the-basics/lesson-2"}}');var s=t(74848),c=t(28453),r=t(96540);const a=function(){const[e,n]=(0,r.useState)(0);return(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:["You clicked ",e," times"]}),(0,s.jsx)("button",{onClick:()=>n(e+1),children:"Click me"})]})},i={count:0};function l(e,n){switch(n.type){case"increment":return{count:e.count+1};case"decrement":return{count:e.count-1};default:throw new Error}}const u=function(){const[e,n]=(0,r.useReducer)(l,i);return(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:["Count: ",e.count]}),(0,s.jsxs)("div",{style:{display:"flex",gap:"5px"},children:[(0,s.jsxs)("button",{onClick:()=>n({type:"decrement"}),children:[" ","Decrement"," "]}),(0,s.jsxs)("button",{onClick:()=>n({type:"increment"}),children:[" ","Increment"," "]})]})]})};const d=function(){const{count:e,increment:n,decrement:t}=function(e){void 0===e&&(e=0);const[n,t]=r.useState(e);return{count:n,increment:()=>t((e=>e+1)),decrement:()=>t((e=>e-1))}}(0);return(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:["Count: ",e]}),(0,s.jsxs)("div",{style:{display:"flex",gap:"5px"},children:[(0,s.jsx)("button",{onClick:t,children:" Decrement "}),(0,s.jsx)("button",{onClick:n,children:" Increment "})]})]})},h={id:"lesson-1",title:"React Hooks in Depth (useEffect, useContext, useReducer, etc.)",sidebar_label:"Lesson - 1",sidebar_position:1,description:"In this lesson, we will learn about React Hooks in depth. We will learn about useEffect, useContext, useReducer, and other hooks. We will also learn how to create custom hooks in React.",tags:["courses","react-js","advanced-level","beyond-the-basics","hooks","useEffect","useContext","useReducer","custom-hooks"]},p=void 0,m={},f=[{value:"What are React Hooks?",id:"what-are-react-hooks",level:2},{value:"Why React Hooks?",id:"why-react-hooks",level:2},{value:"List of React Hooks",id:"list-of-react-hooks",level:2},{value:"useState Hook",id:"usestate-hook",level:3},{value:"useEffect Hook",id:"useeffect-hook",level:3},{value:"useContext Hook",id:"usecontext-hook",level:3},{value:"useReducer Hook",id:"usereducer-hook",level:3},{value:"Custom Hooks",id:"custom-hooks",level:3},{value:"Conclusion",id:"conclusion",level:2}];function x(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,c.R)(),...e.components},{BrowserWindow:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("BrowserWindow",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"In the React Hooks in Depth lesson, we will learn about React Hooks in depth. We will learn about useEffect, useContext, useReducer, and other hooks. We will also learn how to create custom hooks in React."}),"\n",(0,s.jsx)(n.h2,{id:"what-are-react-hooks",children:"What are React Hooks?"}),"\n",(0,s.jsx)(n.p,{children:"React Hooks are functions that let you use state and other React features in functional components. They are introduced in React 16.8.0. Hooks do not work inside classes. They let you use state and other React features without writing a class."}),"\n",(0,s.jsx)(n.h2,{id:"why-react-hooks",children:"Why React Hooks?"}),"\n",(0,s.jsx)(n.p,{children:"Before React Hooks, functional components were stateless. They were used for simple components that did not require state or lifecycle methods. But with the introduction of React Hooks, functional components can now have state and lifecycle methods. This makes functional components more powerful and easier to use."}),"\n",(0,s.jsx)(n.h2,{id:"list-of-react-hooks",children:"List of React Hooks"}),"\n",(0,s.jsx)(n.p,{children:"React provides several built-in hooks that you can use in your functional components. Here are some of the most commonly used React Hooks:"}),"\n",(0,s.jsx)(n.h3,{id:"usestate-hook",children:"useState Hook"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"useState"})," hook lets you add state to functional components. It returns an array with two elements: the current state value and a function that lets you update it."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Counter.js"',children:'import React, { useState } from "react";\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n\nexport default Counter;\n'})}),"\n",(0,s.jsx)(t,{minHeight:300,children:(0,s.jsx)(a,{})}),"\n",(0,s.jsx)(n.h3,{id:"useeffect-hook",children:"useEffect Hook"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"useEffect"})," hook lets you perform side effects in functional components. It is similar to ",(0,s.jsx)(n.code,{children:"componentDidMount"}),", ",(0,s.jsx)(n.code,{children:"componentDidUpdate"}),", and ",(0,s.jsx)(n.code,{children:"componentWillUnmount"})," lifecycle methods in class components."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="ExampleComponent"',children:'import React, { useState, useEffect } from "react";\n\nconst ExampleComponent = () => {\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          "https://jsonplaceholder.typicode.com/users/1",\n        );\n        const data = await response.json();\n        setUserData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error("Error fetching user data:", error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    // Cleanup function\n    return () => {\n      <div>Component unmounted</div>;\n    };\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {userData ? (\n        <div>\n          <h2>Welcome, {userData.name}!</h2>\n          <p>\n            <b>Email:</b> {userData.email},<b>Phone:</b> {userData.phone}\n          </p>\n          <p>\n            <b>Website:</b> {userData.website},<b>Company:</b>{" "}\n            {userData.company.name}\n          </p>\n          <p>\n            <b>City:</b> {userData.address.city},<b>Zipcode:</b>{" "}\n            {userData.address.zipcode}\n          </p>\n          <p>\n            <b>Latitude:</b> {userData.address.geo.lat},<b>Longitude:</b>{" "}\n            {userData.address.geo.lng}\n          </p>\n\n          <button onClick={() => setUserData(null)}>Clear user data</button>\n        </div>\n      ) : (\n        <div>No user data available</div>\n      )}\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"usecontext-hook",children:"useContext Hook"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"useContext"})," hook lets you access the value of a context provider in functional components. It is similar to the ",(0,s.jsx)(n.code,{children:"static contextType"})," property in class components."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="ContextProvider.js"',children:'import React, { createContext, useContext, useState } from "react";\n\n// Step 1: Create a Context\nconst ThemeContext = createContext();\n\n// Step 2: Create a Provider Component\nconst ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState("light");\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === "light" ? "dark" : "light"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <div\n        style={{\n          background: theme === "light" ? "#fff" : "#000",\n          color: theme === "light" ? "#000" : "#fff",\n          width: "100%",\n          height: "300px",\n          padding: "20px",\n        }}\n      >\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\n// Step 3: Create a Consumer Component (Optional)\n\n// Step 4: Use the useContext Hook in child components\nconst ThemeToggler = () => {\n  const { theme, toggleTheme } = useContext(ThemeContext);\n\n  return (\n    <button onClick={toggleTheme}>\n      Switch to {theme === "light" ? "dark" : "light"} mode\n    </button>\n  );\n};\n\nconst DisplayTheme = () => {\n  const { theme } = useContext(ThemeContext);\n\n  return <p>The current theme is: {theme}</p>;\n};\n\n// Step 5: Use the Provider Component to wrap your application\nconst ContextProvider = () => {\n  return (\n    <ThemeProvider>\n      <div>\n        <ThemeToggler />\n        <DisplayTheme />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default ContextProvider;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"usereducer-hook",children:"useReducer Hook"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"useReducer"})," hook lets you manage complex state logic in functional components. It is similar to the ",(0,s.jsx)(n.code,{children:"this.setState"})," method in class components."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="AppUseReducer.js"',children:'import React, { useReducer } from "react";\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case "increment":\n      return { count: state.count + 1 };\n    case "decrement":\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n}\n\nfunction AppUseReducer() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <div style={{ display: "flex", gap: "5px" }}>\n        <button onClick={() => dispatch({ type: "decrement" })}>\n          {" "}\n          Decrement{" "}\n        </button>\n        <button onClick={() => dispatch({ type: "increment" })}>\n          {" "}\n          Increment{" "}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AppUseReducer;\n'})}),"\n",(0,s.jsx)(t,{minHeight:300,children:(0,s.jsx)(u,{})}),"\n",(0,s.jsx)(n.h3,{id:"custom-hooks",children:"Custom Hooks"}),"\n",(0,s.jsxs)(n.p,{children:["You can create custom hooks to reuse stateful logic across multiple components. Custom hooks are JavaScript functions whose names start with ",(0,s.jsx)(n.code,{children:"use"}),". They can call other hooks if needed."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="AppUseCustomHook.js"',children:'import React from "react";\n\nfunction useCounter(initialCount = 0) {\n  const [count, setCount] = React.useState(initialCount);\n\n  const increment = () => setCount((prevCount) => prevCount + 1);\n  const decrement = () => setCount((prevCount) => prevCount - 1);\n\n  return { count, increment, decrement };\n}\n\nfunction AppUseCustomHook() {\n  const { count, increment, decrement } = useCounter(0);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <div style={{ display: "flex", gap: "5px" }}>\n        <button onClick={decrement}> Decrement </button>\n        <button onClick={increment}> Increment </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AppUseCustomHook;\n'})}),"\n",(0,s.jsx)(t,{minHeight:300,children:(0,s.jsx)(d,{})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsxs)(n.p,{children:["In this lesson, we learned about React Hooks in depth. We learned about ",(0,s.jsx)(n.code,{children:"useState"}),", ",(0,s.jsx)(n.code,{children:"useEffect"}),", ",(0,s.jsx)(n.code,{children:"useContext"}),", ",(0,s.jsx)(n.code,{children:"useReducer"}),", and how to create custom hooks in React. React Hooks make it easier to manage state and lifecycle methods in functional components. They provide a more concise and readable way to write React components."]})]})}function k(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const s={},c=o.createContext(s);function r(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);