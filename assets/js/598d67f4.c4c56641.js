"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[63722],{14599:(e,l,a)=>{a.r(l),a.d(l,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"javascript/modules-in-js","title":"Modules in JavaScript","description":"In this tutorial, you will learn about modules in JavaScript, a new feature introduced in ES6 (ES2015) that allows you to organize your code into reusable pieces.","source":"@site/docs/javascript/modules-js.md","sourceDirName":"javascript","slug":"/javascript/modules-in-js","permalink":"/docs/javascript/modules-in-js","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/docs/javascript/modules-js.md","tags":[{"inline":true,"label":"JavaScript","permalink":"/docs/tags/java-script"},{"inline":true,"label":"Modules","permalink":"/docs/tags/modules"},{"inline":true,"label":"ES6","permalink":"/docs/tags/es-6"},{"inline":true,"label":"ES2015","permalink":"/docs/tags/es-2015"},{"inline":true,"label":"ES6 Features","permalink":"/docs/tags/es-6-features"},{"inline":true,"label":"ES2015 Features","permalink":"/docs/tags/es-2015-features"},{"inline":true,"label":"ES6 Tutorials","permalink":"/docs/tags/es-6-tutorials"},{"inline":true,"label":"ES2015 Tutorials","permalink":"/docs/tags/es-2015-tutorials"},{"inline":true,"label":"ES6 Tutorial","permalink":"/docs/tags/es-6-tutorial"},{"inline":true,"label":"ES2015 Tutorial","permalink":"/docs/tags/es-2015-tutorial"},{"inline":true,"label":"ES6 Modules","permalink":"/docs/tags/es-6-modules"},{"inline":true,"label":"ES2015 Modules","permalink":"/docs/tags/es-2015-modules"},{"inline":true,"label":"Modules in JavaScript","permalink":"/docs/tags/modules-in-java-script"},{"inline":true,"label":"Modules in ES6","permalink":"/docs/tags/modules-in-es-6"},{"inline":true,"label":"Modules in ES2015","permalink":"/docs/tags/modules-in-es-2015"},{"inline":true,"label":"JavaScript Modules","permalink":"/docs/tags/java-script-modules"},{"inline":true,"label":"ES6 Modules Tutorial","permalink":"/docs/tags/es-6-modules-tutorial"},{"inline":true,"label":"ES2015 Modules Tutorial","permalink":"/docs/tags/es-2015-modules-tutorial"},{"inline":true,"label":"Modules Tutorial","permalink":"/docs/tags/modules-tutorial"},{"inline":true,"label":"Modules in JavaScript Tutorial","permalink":"/docs/tags/modules-in-java-script-tutorial"},{"inline":true,"label":"Modules in ES6 Tutorial","permalink":"/docs/tags/modules-in-es-6-tutorial"},{"inline":true,"label":"Modules in ES2015 Tutorial","permalink":"/docs/tags/modules-in-es-2015-tutorial"},{"inline":true,"label":"JavaScript Modules Tutorial","permalink":"/docs/tags/java-script-modules-tutorial"},{"inline":true,"label":"ES6 Modules Example","permalink":"/docs/tags/es-6-modules-example"},{"inline":true,"label":"ES2015 Modules Example","permalink":"/docs/tags/es-2015-modules-example"},{"inline":true,"label":"Modules Example","permalink":"/docs/tags/modules-example"},{"inline":true,"label":"Modules in JavaScript Example","permalink":"/docs/tags/modules-in-java-script-example"},{"inline":true,"label":"Modules in ES6 Example","permalink":"/docs/tags/modules-in-es-6-example"},{"inline":true,"label":"Modules in ES2015 Example","permalink":"/docs/tags/modules-in-es-2015-example"},{"inline":true,"label":"JavaScript Modules Example","permalink":"/docs/tags/java-script-modules-example"},{"inline":true,"label":"ES6 Modules Syntax","permalink":"/docs/tags/es-6-modules-syntax"},{"inline":true,"label":"ES2015 Modules Syntax","permalink":"/docs/tags/es-2015-modules-syntax"},{"inline":true,"label":"Modules Syntax","permalink":"/docs/tags/modules-syntax"},{"inline":true,"label":"Modules in JavaScript Syntax","permalink":"/docs/tags/modules-in-java-script-syntax"},{"inline":true,"label":"Modules in ES6 Syntax","permalink":"/docs/tags/modules-in-es-6-syntax"},{"inline":true,"label":"Modules in ES2015 Syntax","permalink":"/docs/tags/modules-in-es-2015-syntax"},{"inline":true,"label":"JavaScript Modules Syntax","permalink":"/docs/tags/java-script-modules-syntax"},{"inline":true,"label":"ES6 Modules Syntax Example","permalink":"/docs/tags/es-6-modules-syntax-example"},{"inline":true,"label":"ES2015 Modules Syntax Example","permalink":"/docs/tags/es-2015-modules-syntax-example"},{"inline":true,"label":"Modules Syntax Example","permalink":"/docs/tags/modules-syntax-example"},{"inline":true,"label":"Modules in JavaScript Syntax Example","permalink":"/docs/tags/modules-in-java-script-syntax-example"},{"inline":true,"label":"Modules in ES6 Syntax Example","permalink":"/docs/tags/modules-in-es-6-syntax-example"},{"inline":true,"label":"Modules in ES2015 Syntax Example","permalink":"/docs/tags/modules-in-es-2015-syntax-example"},{"inline":true,"label":"JavaScript Modules Syntax Example","permalink":"/docs/tags/java-script-modules-syntax-example"},{"inline":true,"label":"ES6 Modules Syntax Tutorial","permalink":"/docs/tags/es-6-modules-syntax-tutorial"},{"inline":true,"label":"ES2015 Modules Syntax Tutorial","permalink":"/docs/tags/es-2015-modules-syntax-tutorial"},{"inline":true,"label":"Modules Syntax Tutorial","permalink":"/docs/tags/modules-syntax-tutorial"},{"inline":true,"label":"Modules in JavaScript Syntax Tutorial","permalink":"/docs/tags/modules-in-java-script-syntax-tutorial"},{"inline":true,"label":"Modules in ES6 Syntax Tutorial","permalink":"/docs/tags/modules-in-es-6-syntax-tutorial"},{"inline":true,"label":"Modules in ES2015 Syntax Tutorial","permalink":"/docs/tags/modules-in-es-2015-syntax-tutorial"},{"inline":true,"label":"JavaScript Modules Syntax Tutorial","permalink":"/docs/tags/java-script-modules-syntax-tutorial"},{"inline":true,"label":"ES6 Modules Syntax Example Tutorial","permalink":"/docs/tags/es-6-modules-syntax-example-tutorial"},{"inline":true,"label":"ES2015 Modules Syntax Example Tutorial","permalink":"/docs/tags/es-2015-modules-syntax-example-tutorial"},{"inline":true,"label":"Modules Syntax Example Tutorial","permalink":"/docs/tags/modules-syntax-example-tutorial"},{"inline":true,"label":"Modules in JavaScript Syntax Example Tutorial","permalink":"/docs/tags/modules-in-java-script-syntax-example-tutorial"},{"inline":true,"label":"Modules in ES6 Syntax Example Tutorial","permalink":"/docs/tags/modules-in-es-6-syntax-example-tutorial"},{"inline":true,"label":"Modules in ES2015 Syntax Example Tutorial","permalink":"/docs/tags/modules-in-es-2015-syntax-example-tutorial"},{"inline":true,"label":"JavaScript Modules Syntax Example Tutorial","permalink":"/docs/tags/java-script-modules-syntax-example-tutorial"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1711170970000,"sidebarPosition":37,"frontMatter":{"id":"modules-in-js","title":"Modules in JavaScript","sidebar_label":"Modules","sidebar_position":37,"tags":["JavaScript","Modules","ES6","ES2015","ES6 Features","ES2015 Features","ES6 Tutorials","ES2015 Tutorials","ES6 Tutorial","ES2015 Tutorial","ES6 Modules","ES2015 Modules","Modules in JavaScript","Modules in ES6","Modules in ES2015","JavaScript Modules","ES6 Modules Tutorial","ES2015 Modules Tutorial","Modules Tutorial","Modules in JavaScript Tutorial","Modules in ES6 Tutorial","Modules in ES2015 Tutorial","JavaScript Modules Tutorial","ES6 Modules Example","ES2015 Modules Example","Modules Example","Modules in JavaScript Example","Modules in ES6 Example","Modules in ES2015 Example","JavaScript Modules Example","ES6 Modules Syntax","ES2015 Modules Syntax","Modules Syntax","Modules in JavaScript Syntax","Modules in ES6 Syntax","Modules in ES2015 Syntax","JavaScript Modules Syntax","ES6 Modules Syntax Example","ES2015 Modules Syntax Example","Modules Syntax Example","Modules in JavaScript Syntax Example","Modules in ES6 Syntax Example","Modules in ES2015 Syntax Example","JavaScript Modules Syntax Example","ES6 Modules Syntax Tutorial","ES2015 Modules Syntax Tutorial","Modules Syntax Tutorial","Modules in JavaScript Syntax Tutorial","Modules in ES6 Syntax Tutorial","Modules in ES2015 Syntax Tutorial","JavaScript Modules Syntax Tutorial","ES6 Modules Syntax Example Tutorial","ES2015 Modules Syntax Example Tutorial","Modules Syntax Example Tutorial","Modules in JavaScript Syntax Example Tutorial","Modules in ES6 Syntax Example Tutorial","Modules in ES2015 Syntax Example Tutorial","JavaScript Modules Syntax Example Tutorial"],"description":"In this tutorial, you will learn about modules in JavaScript, a new feature introduced in ES6 (ES2015) that allows you to organize your code into reusable pieces."},"sidebar":"tutorialSidebar","previous":{"title":"Classes","permalink":"/docs/javascript/classes-in-js"},"next":{"title":"JSON","permalink":"/docs/javascript/json-in-javascript"}}');var s=a(74848),t=a(28453);const o={id:"modules-in-js",title:"Modules in JavaScript",sidebar_label:"Modules",sidebar_position:37,tags:["JavaScript","Modules","ES6","ES2015","ES6 Features","ES2015 Features","ES6 Tutorials","ES2015 Tutorials","ES6 Tutorial","ES2015 Tutorial","ES6 Modules","ES2015 Modules","Modules in JavaScript","Modules in ES6","Modules in ES2015","JavaScript Modules","ES6 Modules Tutorial","ES2015 Modules Tutorial","Modules Tutorial","Modules in JavaScript Tutorial","Modules in ES6 Tutorial","Modules in ES2015 Tutorial","JavaScript Modules Tutorial","ES6 Modules Example","ES2015 Modules Example","Modules Example","Modules in JavaScript Example","Modules in ES6 Example","Modules in ES2015 Example","JavaScript Modules Example","ES6 Modules Syntax","ES2015 Modules Syntax","Modules Syntax","Modules in JavaScript Syntax","Modules in ES6 Syntax","Modules in ES2015 Syntax","JavaScript Modules Syntax","ES6 Modules Syntax Example","ES2015 Modules Syntax Example","Modules Syntax Example","Modules in JavaScript Syntax Example","Modules in ES6 Syntax Example","Modules in ES2015 Syntax Example","JavaScript Modules Syntax Example","ES6 Modules Syntax Tutorial","ES2015 Modules Syntax Tutorial","Modules Syntax Tutorial","Modules in JavaScript Syntax Tutorial","Modules in ES6 Syntax Tutorial","Modules in ES2015 Syntax Tutorial","JavaScript Modules Syntax Tutorial","ES6 Modules Syntax Example Tutorial","ES2015 Modules Syntax Example Tutorial","Modules Syntax Example Tutorial","Modules in JavaScript Syntax Example Tutorial","Modules in ES6 Syntax Example Tutorial","Modules in ES2015 Syntax Example Tutorial","JavaScript Modules Syntax Example Tutorial"],description:"In this tutorial, you will learn about modules in JavaScript, a new feature introduced in ES6 (ES2015) that allows you to organize your code into reusable pieces."},i=void 0,r={},u=[{value:"Modules in JavaScript",id:"modules-in-javascript",level:2},{value:"Default Exports",id:"default-exports",level:2},{value:"Multiple Exports and Imports in a Single Statement",id:"multiple-exports-and-imports-in-a-single-statement",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const l={admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components},{TabItem:a,Tabs:n}=l;return a||c("TabItem",!0),n||c("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(l.p,{children:["In JavaScript, modules are a new feature introduced in ",(0,s.jsx)("mark",{children:"ES6 (ES2015)"})," that allows you to organize your code into reusable pieces. Modules are a way to split your code into separate files and import/export the parts you need."]}),"\n",(0,s.jsx)(l.p,{children:"In this tutorial, you will learn about modules in JavaScript with the help of examples."}),"\n",(0,s.jsx)(l.h2,{id:"modules-in-javascript",children:"Modules in JavaScript"}),"\n",(0,s.jsx)(l.p,{children:"The syntax for importing and exporting modules in JavaScript is as follows:"}),"\n",(0,s.jsxs)(n,{defaultValue:"module1",values:[{label:"module1.js",value:"module1"},{label:"module2.js",value:"module2"},{label:"module3.js",value:"module3"},{label:"app.js",value:"app"}],children:[(0,s.jsx)(a,{value:"module1",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting a variable\nexport const PI = 3.14159;\n"})})}),(0,s.jsx)(a,{value:"module2",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting a function\nexport function add(a, b) {\n    return a + b;\n}\n"})})}),(0,s.jsx)(a,{value:"module3",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting a class\nexport class Person {\n    constructor(name, age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    greet() {\n        return `Hello, my name is ${this.name} and I am ${this.age} years old.`;\n    }\n}\n"})})}),(0,s.jsx)(a,{value:"app",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:'// Importing a variable\nimport { PI } from "./module1.js";\n\n// Importing a function\nimport { add } from "./module2.js";\n\n// Importing a class\nimport { Person } from "./module3.js";\n\nconsole.log(PI); // Output: 3.14159\n\nconsole.log(add(5, 3)); // Output: 8\n\nconst john = new Person("John", 30);\n\nconsole.log(john.greet()); // Output: Hello, my name is John and I am 30 years old.\n'})})})]}),"\n",(0,s.jsxs)(l.p,{children:["In the example above, we have three modules: ",(0,s.jsx)(l.code,{children:"module1.js"}),", ",(0,s.jsx)(l.code,{children:"module2.js"}),", and ",(0,s.jsx)(l.code,{children:"module3.js"}),", each exporting a variable, a function, and a class, respectively. The ",(0,s.jsx)(l.code,{children:"app.js"})," file imports these modules and uses the exported values."]}),"\n",(0,s.jsx)(l.p,{children:"Here's a breakdown of the example:"}),"\n",(0,s.jsxs)(l.ol,{children:["\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.code,{children:"module1.js"})," exports a variable ",(0,s.jsx)(l.code,{children:"PI"})," with the value ",(0,s.jsx)(l.code,{children:"3.14159"}),"."]}),"\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.code,{children:"module2.js"})," exports a function ",(0,s.jsx)(l.code,{children:"add"})," that takes two parameters and returns their sum."]}),"\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.code,{children:"module3.js"})," exports a class ",(0,s.jsx)(l.code,{children:"Person"})," with a constructor that initializes the ",(0,s.jsx)(l.code,{children:"name"})," and ",(0,s.jsx)(l.code,{children:"age"})," properties and a ",(0,s.jsx)(l.code,{children:"greet"})," method that returns a greeting message."]}),"\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.code,{children:"app.js"})," imports the exported values from the modules and uses them in the code."]}),"\n"]}),"\n",(0,s.jsxs)(l.p,{children:["When you run ",(0,s.jsx)(l.code,{children:"app.js"}),", you will see the following output:"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",metastring:'title="Output"',children:"3.14159\n8\nHello, my name is John and I am 30 years old.\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is how you can use modules in JavaScript to organize your code into reusable pieces."}),"\n",(0,s.jsx)(l.h2,{id:"default-exports",children:"Default Exports"}),"\n",(0,s.jsxs)(l.p,{children:["In addition to named exports, you can also use default exports in JavaScript modules. A default export is a single value that is exported from a module and can be imported without using curly braces ",(0,s.jsx)(l.code,{children:"{}"}),"."]}),"\n",(0,s.jsx)(l.p,{children:"Here's an example of using default exports in JavaScript modules:"}),"\n",(0,s.jsxs)(n,{defaultValue:"module1",values:[{label:"module1.js",value:"module1"},{label:"module2.js",value:"module2"},{label:"app.js",value:"app"}],children:[(0,s.jsx)(a,{value:"module1",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Default export\nconst PI = 3.14159;\n\nexport default PI;\n"})})}),(0,s.jsx)(a,{value:"module2",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Default export\nexport default function add(a, b) {\n    return a + b;\n}\n"})})}),(0,s.jsx)(a,{value:"app",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:'// Importing a default export\nimport PI from "./module1.js";\n\n// Importing a default export\nimport add from "./module2.js";\n\nconsole.log(PI); // Output: 3.14159\n\nconsole.log(add(5, 3)); // Output: 8\n'})})})]}),"\n",(0,s.jsxs)(l.p,{children:["In this example, we have two modules: ",(0,s.jsx)(l.code,{children:"module1.js"})," and ",(0,s.jsx)(l.code,{children:"module2.js"}),", each exporting a single value using default exports. The ",(0,s.jsx)(l.code,{children:"app.js"})," file imports these default exports without using curly braces ",(0,s.jsx)(l.code,{children:"{}"}),"."]}),"\n",(0,s.jsxs)(l.p,{children:["When you run ",(0,s.jsx)(l.code,{children:"app.js"}),", you will see the following output:"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",metastring:'title="Output"',children:"3.14159\n8\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is how you can use default exports in JavaScript modules."}),"\n",(0,s.jsx)(l.h2,{id:"multiple-exports-and-imports-in-a-single-statement",children:"Multiple Exports and Imports in a Single Statement"}),"\n",(0,s.jsxs)(l.p,{children:["You can also export and import multiple values in a single statement using the ",(0,s.jsx)(l.code,{children:"export"})," and ",(0,s.jsx)(l.code,{children:"import"})," keywords."]}),"\n",(0,s.jsx)(l.p,{children:"Here's an example of exporting and importing multiple values in a single statement:"}),"\n",(0,s.jsxs)(n,{defaultValue:"module1",values:[{label:"module1.js",value:"module1"},{label:"module2.js",value:"module2"},{label:"app.js",value:"app"}],children:[(0,s.jsx)(a,{value:"module1",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting multiple values\nexport const PI = 3.14159;\nexport const E = 2.71828;\n"})})}),(0,s.jsx)(a,{value:"module2",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting multiple values\nexport function add(a, b) {\n    return a + b;\n}\n\nexport function subtract(a, b) {\n    return a - b;\n}\n"})})}),(0,s.jsx)(a,{value:"app",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:'// Importing multiple values\nimport { PI, E } from "./module1.js";\n\n// Importing multiple values\nimport { add, subtract } from "./module2.js";\n\nconsole.log(PI); // Output: 3.14159\nconsole.log(E); // Output: 2.71828\n\nconsole.log(add(5, 3)); // Output: 8\n\nconsole.log(subtract(5, 3)); // Output: 2\n'})})})]}),"\n",(0,s.jsxs)(l.p,{children:["In this example, we have two modules: ",(0,s.jsx)(l.code,{children:"module1.js"})," and ",(0,s.jsx)(l.code,{children:"module2.js"}),", each exporting multiple values using the ",(0,s.jsx)(l.code,{children:"export"})," keyword. The ",(0,s.jsx)(l.code,{children:"app.js"})," file imports these multiple values in a single statement using the ",(0,s.jsx)(l.code,{children:"import"})," keyword."]}),"\n",(0,s.jsxs)(l.p,{children:["When you run ",(0,s.jsx)(l.code,{children:"app.js"}),", you will see the following output:"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",metastring:'title="Output"',children:"3.14159\n2.71828\n8\n2\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is how you can export and import multiple values in a single statement in JavaScript modules."}),"\n",(0,s.jsxs)(l.admonition,{title:"\ud83d\udcdd Note",type:"info",children:[(0,s.jsxs)(l.p,{children:["You can also use the ",(0,s.jsx)(l.code,{children:"export * from 'module'"})," syntax to re-export all named exports from another module. This can be useful when you want to aggregate exports from multiple modules into a single module."]}),(0,s.jsx)(l.p,{children:"For example:"}),(0,s.jsxs)(n,{defaultValue:"module1",values:[{label:"module1.js",value:"module1"},{label:"module2.js",value:"module2"},{label:"module.js",value:"module"},{label:"app.js",value:"app"}],children:[(0,s.jsx)(a,{value:"module1",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting a variable\nexport const PI = 3.14159;\n"})})}),(0,s.jsx)(a,{value:"module2",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:"// Exporting a variable\nexport const E = 2.71828;\n"})})}),(0,s.jsx)(a,{value:"module",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:'// Re-exporting named exports\nexport * from "./module1.js";\nexport * from "./module2.js";\n'})})}),(0,s.jsx)(a,{value:"app",children:(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-js",children:'// Importing re-exported values\nimport { PI, E } from "./module.js";\n\nconsole.log(PI); // Output: 3.14159\nconsole.log(E); // Output: 2.71828\n'})})})]}),(0,s.jsxs)(l.p,{children:["In this example, we have two modules ",(0,s.jsx)(l.code,{children:"module1.js"})," and ",(0,s.jsx)(l.code,{children:"module2.js"}),", each exporting a variable. The ",(0,s.jsx)(l.code,{children:"module.js"})," file re-exports the named exports from ",(0,s.jsx)(l.code,{children:"module1.js"})," and ",(0,s.jsx)(l.code,{children:"module2.js"}),". The ",(0,s.jsx)(l.code,{children:"app.js"})," file imports the re-exported values from ",(0,s.jsx)(l.code,{children:"module.js"}),"."]}),(0,s.jsxs)(l.p,{children:["When you run ",(0,s.jsx)(l.code,{children:"app.js"}),", you will see the following output:"]}),(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",metastring:'title="Output"',children:"3.14159\n2.71828\n"})}),(0,s.jsx)(l.p,{children:"This is how you can re-export named exports from other modules in JavaScript."})]}),"\n",(0,s.jsxs)(l.admonition,{type:"important",children:[(0,s.jsx)(l.p,{children:"When using modules in JavaScript, you need to be aware of the module system you are using. Common module systems include CommonJS, AMD, and ES6 modules. ES6 modules are the standard module system in modern JavaScript applications."}),(0,s.jsxs)(l.p,{children:["If you are using a module in html file, you can use the ",(0,s.jsx)(l.code,{children:'type="module"'})," attribute in the ",(0,s.jsx)(l.code,{children:"<script>"})," tag to indicate that the script is a module."]}),(0,s.jsx)(l.p,{children:"For example:"}),(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-html",metastring:'title="index.html"',children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Module Example</title>\n    <script type="module" src="app.js"><\/script>\n</head>\n<body>\n    \x3c!-- Your HTML content here --\x3e\n</body>\n</html>\n'})}),(0,s.jsxs)(l.p,{children:["In this example, the ",(0,s.jsx)(l.code,{children:'type="module"'})," attribute in the ",(0,s.jsx)(l.code,{children:"<script>"})," tag indicates that the ",(0,s.jsx)(l.code,{children:"app.js"})," script is a module."]})]}),"\n",(0,s.jsx)(l.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(l.p,{children:"Modules in JavaScript provide a way to organize your code into reusable pieces. You can export and import variables, functions, classes, and other values between modules to create a modular and maintainable codebase."})]})}function p(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function c(e,l){throw new Error("Expected "+(l?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,l,a)=>{a.d(l,{R:()=>o,x:()=>i});var n=a(96540);const s={},t=n.createContext(s);function o(e){const l=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);