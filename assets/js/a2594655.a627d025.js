"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[5304],{41715:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"javascript/js-versions/es2021-version-of-javascript","title":"JavaScript ES2021 Version (2021)","description":"In this tutorial, we will learn about the ES2021 version of JavaScript, also known as ECMAScript 2021. We will discuss the new features introduced in ES2021 and how to use them in your JavaScript code.","source":"@site/docs/javascript/js-versions/js-2021.md","sourceDirName":"javascript/js-versions","slug":"/javascript/js-versions/es2021-version-of-javascript","permalink":"/docs/javascript/js-versions/es2021-version-of-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/docs/javascript/js-versions/js-2021.md","tags":[{"inline":true,"label":"JavaScript","permalink":"/docs/tags/java-script"},{"inline":true,"label":"ES2021","permalink":"/docs/tags/es-2021"},{"inline":true,"label":"ECMAScript 2021","permalink":"/docs/tags/ecma-script-2021"},{"inline":true,"label":"JavaScript ES2021","permalink":"/docs/tags/java-script-es-2021"},{"inline":true,"label":"JavaScript ES2021","permalink":"/docs/tags/java-script-es-2021"},{"inline":true,"label":"JavaScript ES2021 Version","permalink":"/docs/tags/java-script-es-2021-version"},{"inline":true,"label":"JavaScript ES2021 Version","permalink":"/docs/tags/java-script-es-2021-version"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1711468859000,"sidebarPosition":7,"frontMatter":{"id":"es2021-version-of-javascript","title":"JavaScript ES2021 Version (2021)","sidebar_label":"ES2021 Version (2021)","sidebar_position":7,"tags":["JavaScript","ES2021","ECMAScript 2021","JavaScript ES2021","JavaScript ES2021","JavaScript ES2021 Version","JavaScript ES2021 Version"],"description":"In this tutorial, we will learn about the ES2021 version of JavaScript, also known as ECMAScript 2021. We will discuss the new features introduced in ES2021 and how to use them in your JavaScript code."},"sidebar":"tutorialSidebar","previous":{"title":"ES2020 Version (2020)","permalink":"/docs/javascript/js-versions/es2020-version-of-javascript"},"next":{"title":"ES2022 Version (2022)","permalink":"/docs/javascript/js-versions/es2022-version-of-javascript"}}');var t=n(74848),o=n(28453);const a={id:"es2021-version-of-javascript",title:"JavaScript ES2021 Version (2021)",sidebar_label:"ES2021 Version (2021)",sidebar_position:7,tags:["JavaScript","ES2021","ECMAScript 2021","JavaScript ES2021","JavaScript ES2021","JavaScript ES2021 Version","JavaScript ES2021 Version"],description:"In this tutorial, we will learn about the ES2021 version of JavaScript, also known as ECMAScript 2021. We will discuss the new features introduced in ES2021 and how to use them in your JavaScript code."},i=void 0,l={},c=[{value:"Features of ES2021",id:"features-of-es2021",level:2},{value:"Browser Support for ES2021",id:"browser-support-for-es2021",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const r={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"JavaScript ES2021 (ECMAScript 2021) is the twelfth major release of the JavaScript language specification. It was finalized in June 2021. ES2021 introduced several new features and enhancements to JavaScript, building upon the foundation laid by ES6 (ES2015). In this tutorial, we will learn about the new features introduced in ES2021 and how to use them in your JavaScript code."}),"\n",(0,t.jsx)(r.h2,{id:"features-of-es2021",children:"Features of ES2021"}),"\n",(0,t.jsx)(r.p,{children:"ES2021 introduced several new features and enhancements to JavaScript. Some of the key features of ES2021 are:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"String.prototype.replaceAll()"}),": ES2021 introduced the ",(0,t.jsx)(r.code,{children:"String.prototype.replaceAll()"})," method, which allows you to replace all occurrences of a substring within a string with another substring. The ",(0,t.jsx)(r.code,{children:"replaceAll()"})," method replaces all occurrences of a specified substring with another substring and returns a new string."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="String.prototype.replaceAll() Example"',children:' let str = "Hello, World!";\n let newStr = str.replaceAll("o", "0");\n console.log(newStr); // Output: Hell0, W0rld!\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Logical Assignment Operators"}),": ES2021 introduced the logical assignment operators ",(0,t.jsx)(r.code,{children:"||="})," (logical OR assignment) and ",(0,t.jsx)(r.code,{children:"&&="})," (logical AND assignment). These operators allow you to assign a value to a variable only if the variable is ",(0,t.jsx)(r.code,{children:"null"}),", ",(0,t.jsx)(r.code,{children:"undefined"}),", ",(0,t.jsx)(r.code,{children:"false"}),", ",(0,t.jsx)(r.code,{children:"0"}),", ",(0,t.jsx)(r.code,{children:"NaN"}),", or an empty string (",(0,t.jsx)(r.code,{children:'""'}),")."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="Logical Assignment Operators Example"',children:" let x = 10;\n x ||= 20; // Equivalent to: x = x || 20;\n console.log(x); // Output: 10\n\n let y = 0;\n y &&= 5; // Equivalent to: y = y && 5;\n console.log(y); // Output: 0\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Numeric Separators"}),": ES2021 introduced numeric separators, which allow you to use underscores (",(0,t.jsx)(r.code,{children:"_"}),") as separators in numeric literals to make them more readable. Numeric separators are ignored by the JavaScript engine and are used only for formatting purposes."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="Numeric Separators Example"',children:" let billion = 1_000_000_000;\n console.log(billion); // Output: 1000000000\n \n let pi = 3.14159_26535;\n console.log(pi); // Output: 3.1415926535\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"WeakRef"}),": ES2021 introduced the ",(0,t.jsx)(r.code,{children:"WeakRef"})," object, which allows you to create weak references to objects. Weak references do not prevent the garbage collector from collecting the object they reference. The ",(0,t.jsx)(r.code,{children:"WeakRef"})," object is useful for implementing caches or other data structures that need to hold references to objects without preventing them from being garbage collected."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="WeakRef Example"',children:" let obj = { name: \"Alice\" };\n let weakRef = new WeakRef(obj);\n console.log(weakRef.deref()); // Output: { name: 'Alice' }\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"FinalizationRegistry"}),": ES2021 introduced the ",(0,t.jsx)(r.code,{children:"FinalizationRegistry"})," object, which allows you to register objects for cleanup when they are garbage collected. The ",(0,t.jsx)(r.code,{children:"FinalizationRegistry"})," object is used to perform cleanup actions on objects before they are collected by the garbage collector."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="FinalizationRegistry Example"',children:' let obj = { name: "Alice" };\n let finalizationRegistry = new FinalizationRegistry((heldValue) => {\n     console.log(`Cleaning up: ${heldValue.name}`);\n });\n finalizationRegistry.register(obj, "held value");\n obj = null; // Allow obj to be garbage collected\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Promise.any()"}),": ES2021 introduced the ",(0,t.jsx)(r.code,{children:"Promise.any()"})," method, which takes an iterable of ",(0,t.jsx)(r.code,{children:"Promises"})," and returns a new ",(0,t.jsx)(r.code,{children:"Promise"})," that resolves as soon as one of the input ",(0,t.jsx)(r.code,{children:"Promises"})," is fulfilled. If all the input ",(0,t.jsx)(r.code,{children:"Promises"})," are rejected, the ",(0,t.jsx)(r.code,{children:"Promise"})," returned by ",(0,t.jsx)(r.code,{children:"Promise.any()"})," is rejected with an ",(0,t.jsx)(r.code,{children:"AggregateError"})," that contains an array of rejection reasons."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="Promise.any() Example"',children:' const promises = [\n     Promise.reject("Error 1"),\n     Promise.resolve("Success 1"),\n     Promise.reject("Error 2"),\n ];\n \n Promise.any(promises)\n     .then((value) => {\n         console.log(value); // Output: "Success 1"\n     })\n     .catch((error) => {\n         console.error(error); // Output: AggregateError: All promises were rejected\n     });\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"AggregateError"}),": ES2021 introduced the ",(0,t.jsx)(r.code,{children:"AggregateError"})," object, which is used to represent multiple errors in a single error object. The ",(0,t.jsx)(r.code,{children:"AggregateError"})," object contains an array of errors as its ",(0,t.jsx)(r.code,{children:"errors"})," property."]}),"\n",(0,t.jsx)(r.p,{children:"For example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",metastring:'title="AggregateError Example"',children:' const error1 = new Error("Error 1");\n const error2 = new Error("Error 2");\n const aggregateError = new AggregateError([error1, error2]);\n console.log(aggregateError.errors); // Output: [Error: Error 1, Error: Error 2]\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"browser-support-for-es2021",children:"Browser Support for ES2021"}),"\n",(0,t.jsx)(r.p,{children:"Most modern web browsers support ES2021 features, but some older browsers may not fully support all ES2021 features. To ensure that your JavaScript code works across all browsers, you can use a transpiler like Babel to convert your ES2021 code into ES5 code, which is compatible with older browsers."}),"\n",(0,t.jsx)(r.p,{children:"ES2021 features are generally well-supported in modern web browsers, and you can start using them in your JavaScript code without the need for a transpiler in most cases. However, it is always a good practice to check the compatibility of the features you are using with the target browsers to ensure a consistent user experience."}),"\n",(0,t.jsxs)(r.p,{children:["For more information on browser support for ES2021 features, you can check the compatibility tables provided by ",(0,t.jsx)(r.a,{href:"https://caniuse.com/",children:"Can I use"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(r.p,{children:["In this tutorial, we learned about the ES2021 version of JavaScript (ECMAScript 2021) and the new features introduced in ES2021. We explored features such as ",(0,t.jsx)(r.code,{children:"String.prototype.replaceAll()"}),", logical assignment operators, numeric separators, ",(0,t.jsx)(r.code,{children:"WeakRef"}),", ",(0,t.jsx)(r.code,{children:"FinalizationRegistry"}),", ",(0,t.jsx)(r.code,{children:"Promise.any()"}),", and ",(0,t.jsx)(r.code,{children:"AggregateError"}),". You can start using these features in your JavaScript code to take advantage of the latest enhancements in the language."]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var s=n(96540);const t={},o=s.createContext(t);function a(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);