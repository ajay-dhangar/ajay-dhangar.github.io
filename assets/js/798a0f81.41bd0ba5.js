"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[92217],{82789:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"react/styles-and-assets/loading-graphql-files","title":"How to Load GraphQL Files in React","description":"Learn how to load GraphQL files in a Create React App project. Use Apollo Client or GraphQL Code Generator to fetch data from your GraphQL server and simplify your React application development.","source":"@site/docs/react/styles-and-assets/loading-graphql-files.md","sourceDirName":"react/styles-and-assets","slug":"/react/styles-and-assets/loading-graphql-files","permalink":"/docs/react/styles-and-assets/loading-graphql-files","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/docs/react/styles-and-assets/loading-graphql-files.md","tags":[{"inline":true,"label":"react","permalink":"/docs/tags/react"},{"inline":true,"label":"create-react-app","permalink":"/docs/tags/create-react-app"},{"inline":true,"label":"graphql","permalink":"/docs/tags/graphql"},{"inline":true,"label":"apollo-client","permalink":"/docs/tags/apollo-client"},{"inline":true,"label":"graphql-code-generator","permalink":"/docs/tags/graphql-code-generator"},{"inline":true,"label":"react-apollo","permalink":"/docs/tags/react-apollo"},{"inline":true,"label":"react-apollo-hooks","permalink":"/docs/tags/react-apollo-hooks"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710610499000,"sidebarPosition":7,"frontMatter":{"id":"loading-graphql-files","title":"How to Load GraphQL Files in React","sidebar_label":"Loading GraphQL Files","sidebar_position":7,"tags":["react","create-react-app","graphql","apollo-client","graphql-code-generator","react-apollo","react-apollo-hooks"],"description":"Learn how to load GraphQL files in a Create React App project. Use Apollo Client or GraphQL Code Generator to fetch data from your GraphQL server and simplify your React application development."},"sidebar":"tutorialSidebar","previous":{"title":"Images Fonts and Files","permalink":"/docs/react/styles-and-assets/adding-images-fonts-and-files"},"next":{"title":"Using the Public Folder","permalink":"/docs/react/styles-and-assets/using-the-public-folder"}}');var o=n(74848),t=n(28453);const l={id:"loading-graphql-files",title:"How to Load GraphQL Files in React",sidebar_label:"Loading GraphQL Files",sidebar_position:7,tags:["react","create-react-app","graphql","apollo-client","graphql-code-generator","react-apollo","react-apollo-hooks"],description:"Learn how to load GraphQL files in a Create React App project. Use Apollo Client or GraphQL Code Generator to fetch data from your GraphQL server and simplify your React application development."},i=void 0,s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Method 1: Using Apollo Client",id:"method-1-using-apollo-client",level:2},{value:"Method 2: Using GraphQL Code Generator",id:"method-2-using-graphql-code-generator",level:2},{value:"Conclusion",id:"conclusion",level:2}];function p(e){const r={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(r.p,{children:"GraphQL is a powerful query language for APIs that allows you to efficiently request only the data you need from your server. If you are using GraphQL in your React application created with Create React App, you might wonder how to load your GraphQL files effectively."}),"\n",(0,o.jsx)(r.p,{children:"In this guide, we'll walk you through the process of loading GraphQL files in a Create React App project. We'll cover two popular approaches: using Apollo Client and using GraphQL Code Generator. Buckle up, and let's dive into the world of GraphQL!"}),"\n",(0,o.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(r.p,{children:"Before we proceed, make sure you have the following installed in your development environment:"}),"\n",(0,o.jsxs)(r.ol,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://nodejs.org",children:"Node.js"})," - JavaScript runtime environment."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"/docs/react/getting-started/",children:"Create React App"})," - Get Started to Create React app."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.a,{href:"https://reactjs.org/docs/create-a-new-react-app.html",children:"Create React App"})," - The official tool to create React applications."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"method-1-using-apollo-client",children:"Method 1: Using Apollo Client"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"https://www.apollographql.com/docs/react/",children:"Apollo Client"})," is a widely-used GraphQL client that simplifies the process of fetching data from a GraphQL server in your React application. Let's see how you can set up Apollo Client in your Create React App project:"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"1. Install Dependencies"})}),"\n",(0,o.jsx)(r.p,{children:"Open your terminal and navigate to your project directory. Run the following command to install the required packages:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"npm install @apollo/client graphql\n"})}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"2. Set up Apollo Client"})}),"\n",(0,o.jsxs)(r.p,{children:["Create a new file called ",(0,o.jsx)(r.code,{children:"apolloClient.js"})," in the ",(0,o.jsx)(r.code,{children:"src"})," directory and add the following code:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",metastring:'title="apolloClient.js"',children:"import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://your-graphql-server.com/graphql', // Replace this with your GraphQL server URL\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n"})}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"3. Wrap your App with Apollo Provider"})}),"\n",(0,o.jsxs)(r.p,{children:["Open the ",(0,o.jsx)(r.code,{children:"index.js"})," file in the ",(0,o.jsx)(r.code,{children:"src"})," directory, and modify it as follows:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",metastring:'title="index.js"',children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './apolloClient';\nimport App from './App';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"})}),"\n",(0,o.jsx)(r.p,{children:"Now, your React application is equipped with Apollo Client, and you can start making GraphQL queries and mutations!"}),"\n",(0,o.jsx)(r.h2,{id:"method-2-using-graphql-code-generator",children:"Method 2: Using GraphQL Code Generator"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"https://graphql-code-generator.com/",children:"GraphQL Code Generator"})," is a fantastic tool that generates TypeScript types and React hooks based on your GraphQL schema and operations. It simplifies working with GraphQL in React by providing type safety and autocompletion for your queries and mutations. Let's get started:"]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"1. Install Dependencies"})}),"\n",(0,o.jsx)(r.p,{children:"Run the following command in your terminal to install the required packages:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"npm install -g graphql-codegen\n"})}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"2. Set up GraphQL Code Generator"})}),"\n",(0,o.jsxs)(r.p,{children:["Create a ",(0,o.jsx)(r.code,{children:"codegen.yml"})," file in the root of your project and add the following configuration:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"overwrite: true\nschema: https://your-graphql-server.com/graphql # Replace this with your GraphQL schema URL\ndocuments: src/**/*.graphql\ngenerates:\n  src/generated/graphql.tsx:\n    plugins:\n      - 'typescript'\n      - 'typescript-operations'\n      - 'typescript-react-apollo'\n"})}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"3. Create GraphQL Operations"})}),"\n",(0,o.jsxs)(r.p,{children:["In the ",(0,o.jsx)(r.code,{children:"src"})," directory, create a folder called ",(0,o.jsx)(r.code,{children:"graphql"})," and add your GraphQL query or mutation files with the ",(0,o.jsx)(r.code,{children:".graphql"})," extension. For example, ",(0,o.jsx)(r.code,{children:"query.graphql"}),"."]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"4. Generate Code"})}),"\n",(0,o.jsx)(r.p,{children:"Now, run the following command to generate TypeScript types and React hooks based on your GraphQL operations:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"graphql-codegen\n"})}),"\n",(0,o.jsxs)(r.p,{children:["You will see a new file ",(0,o.jsx)(r.code,{children:"graphql.tsx"})," in the ",(0,o.jsx)(r.code,{children:"generated"})," folder inside ",(0,o.jsx)(r.code,{children:"src"}),", containing the generated code."]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.strong,{children:"5. Use Generated Code in your Components"})}),"\n",(0,o.jsx)(r.p,{children:"You can now import and use the generated hooks in your React components:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:"import { useMyQuery } from '../generated/graphql';\n\nconst MyComponent = () => {\n  const { data, loading, error } = useMyQuery();\n\n  // Your component logic here\n};\n"})}),"\n",(0,o.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(r.p,{children:"In this guide, you learned how to load GraphQL files in a Create React App project using two popular approaches: Apollo Client and GraphQL Code Generator. You can choose the method that best suits your project requirements and start building powerful React applications with GraphQL. Happy coding!"})]})}function d(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>i});var a=n(96540);const o={},t=a.createContext(o);function l(e){const r=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(t.Provider,{value:r},e.children)}}}]);