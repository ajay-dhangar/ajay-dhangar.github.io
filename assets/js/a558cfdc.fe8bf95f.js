"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[22302],{6251:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"react/styles-and-assets/adding-a-css-modules-stylesheet","title":"Adding A CSS Modules Stylesheet","description":"Learn how to add a CSS Modules stylesheet to your Create React App project. Use scoped styling and prevent naming clashes by automatically generating unique class names for your styles.","source":"@site/docs/react/styles-and-assets/adding-a-css-modules-stylesheet.md","sourceDirName":"react/styles-and-assets","slug":"/react/styles-and-assets/adding-a-css-modules-stylesheet","permalink":"/docs/react/styles-and-assets/adding-a-css-modules-stylesheet","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/docs/react/styles-and-assets/adding-a-css-modules-stylesheet.md","tags":[{"inline":true,"label":"react","permalink":"/docs/tags/react"},{"inline":true,"label":"create-react-app","permalink":"/docs/tags/create-react-app"},{"inline":true,"label":"css-modules","permalink":"/docs/tags/css-modules"},{"inline":true,"label":"css","permalink":"/docs/tags/css"},{"inline":true,"label":"stylesheet","permalink":"/docs/tags/stylesheet"},{"inline":true,"label":"styling","permalink":"/docs/tags/styling"},{"inline":true,"label":"react-scripts","permalink":"/docs/tags/react-scripts"},{"inline":true,"label":"react-dom","permalink":"/docs/tags/react-dom"},{"inline":true,"label":"react-app","permalink":"/docs/tags/react-app"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710610499000,"sidebarPosition":2,"frontMatter":{"id":"adding-a-css-modules-stylesheet","title":"Adding A CSS Modules Stylesheet","sidebar_label":"CSS Modules Stylesheet","sidebar_position":2,"tags":["react","create-react-app","css-modules","css","stylesheet","styling","react-scripts","react-dom","react-app"],"description":"Learn how to add a CSS Modules stylesheet to your Create React App project. Use scoped styling and prevent naming clashes by automatically generating unique class names for your styles."},"sidebar":"tutorialSidebar","previous":{"title":"Stylesheet","permalink":"/docs/react/styles-and-assets/adding-a-stylesheet"},"next":{"title":"Sass Stylesheet","permalink":"/docs/react/styles-and-assets/adding-a-sass-stylesheet"}}');var l=t(74848),r=t(28453);const o={id:"adding-a-css-modules-stylesheet",title:"Adding A CSS Modules Stylesheet",sidebar_label:"CSS Modules Stylesheet",sidebar_position:2,tags:["react","create-react-app","css-modules","css","stylesheet","styling","react-scripts","react-dom","react-app"],description:"Learn how to add a CSS Modules stylesheet to your Create React App project. Use scoped styling and prevent naming clashes by automatically generating unique class names for your styles."},a=void 0,i={},c=[{value:"Step 1: Set up a Create React App project",id:"step-1-set-up-a-create-react-app-project",level:2},{value:"Step 2: Create a CSS file",id:"step-2-create-a-css-file",level:2},{value:"Step 3: Write some CSS code",id:"step-3-write-some-css-code",level:2},{value:"Step 4: Import and use the CSS classes",id:"step-4-import-and-use-the-css-classes",level:2},{value:"Step 5: Start the development server",id:"step-5-start-the-development-server",level:2},{value:"Create a CSS Modules stylesheet",id:"create-a-css-modules-stylesheet",level:2},{value:"Import the CSS Modules stylesheet",id:"import-the-css-modules-stylesheet",level:2},{value:"Use CSS Modules and regular stylesheets together",id:"use-css-modules-and-regular-stylesheets-together",level:2},{value:"Result",id:"result",level:2},{value:"Live Coding",id:"live-coding",level:2},{value:"Example-1:",id:"example-1",level:3},{value:"Example-2:",id:"example-2",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{BrowserWindow:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("BrowserWindow",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.admonition,{type:"note",children:(0,l.jsxs)(s.p,{children:["This feature is available with ",(0,l.jsx)(s.code,{children:"react-scripts@2.0.0"})," and higher."]})}),"\n",(0,l.jsx)(s.p,{children:"This tutorial will guide you through the process of adding a CSS Modules stylesheet to your React project. CSS Modules provide scoped styling and prevent naming clashes by automatically generating unique class names for your styles."}),"\n",(0,l.jsx)(s.admonition,{type:"tip",children:(0,l.jsxs)(s.p,{children:["If you prefer to use Sass for preprocessing your stylesheets, make sure to ",(0,l.jsx)(s.a,{href:"https://codemastermindhq.vercel.app/docs/react/create-react-app/styles-and-assets/adding-a-sass-stylesheet",children:"follow the installation instructions"})," and use the ",(0,l.jsx)(s.code,{children:".module.scss"})," or ",(0,l.jsx)(s.code,{children:".module.sass"})," file extension."]})}),"\n",(0,l.jsxs)(s.p,{children:["CSS Modules allow you to reuse the same class names across different files without worrying about conflicts. To learn more about CSS Modules, check out this ",(0,l.jsx)(s.a,{href:"https://css-tricks.com/css-modules-part-1-need/",children:"CSS-Tricks article"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"CSS Modules is a popular approach for styling React applications, providing a scoped and modularized way of managing styles. In this guide, we will walk you through the steps of adding a CSS Modules stylesheet to your Create React App project."}),"\n",(0,l.jsx)(s.h2,{id:"step-1-set-up-a-create-react-app-project",children:"Step 1: Set up a Create React App project"}),"\n",(0,l.jsx)(s.p,{children:"If you haven't already, create a new React project using Create React App. Open your command line and run the following command:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",metastring:'title="Terminal"',children:"npx create-react-app my-app\n"})}),"\n",(0,l.jsxs)(s.p,{children:["This command will set up a new React project in a directory called ",(0,l.jsx)(s.code,{children:"my-app"}),"."]}),"\n",(0,l.jsx)(s.h2,{id:"step-2-create-a-css-file",children:"Step 2: Create a CSS file"}),"\n",(0,l.jsxs)(s.p,{children:["Inside the ",(0,l.jsx)(s.code,{children:"src"})," directory of your project, create a new CSS file. Let's name it ",(0,l.jsx)(s.code,{children:"styles.module.css"}),". The ",(0,l.jsx)(s.code,{children:".module.css"})," extension is important as it tells Create React App to enable CSS Modules for this file."]}),"\n",(0,l.jsx)(s.h2,{id:"step-3-write-some-css-code",children:"Step 3: Write some CSS code"}),"\n",(0,l.jsxs)(s.p,{children:["Open the ",(0,l.jsx)(s.code,{children:"styles.module.css"})," file and write your desired CSS code. For example:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-css",metastring:'title="styles.module.css"',children:".container {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.title {\n  font-size: 24px;\n  color: #333;\n}\n\n.button {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n}\n"})}),"\n",(0,l.jsx)(s.p,{children:"Feel free to add more CSS rules as per your project requirements."}),"\n",(0,l.jsx)(s.h2,{id:"step-4-import-and-use-the-css-classes",children:"Step 4: Import and use the CSS classes"}),"\n",(0,l.jsxs)(s.p,{children:["Now, go to the JavaScript file where you want to use the CSS classes. Import the ",(0,l.jsx)(s.code,{children:"styles"})," object from the CSS file you created:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-javascript",metastring:'title="MyComponent.jsx"',children:"import styles from './styles.module.css';\n"})}),"\n",(0,l.jsxs)(s.p,{children:["You can now use the imported ",(0,l.jsx)(s.code,{children:"styles"})," object to access the CSS classes defined in the file. For example:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-javascript",metastring:'title="MyComponent.jsx"',children:"function MyComponent() {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Welcome to My App</h1>\n      <button className={styles.button}>Click me</button>\n    </div>\n  );\n}\n"})}),"\n",(0,l.jsxs)(s.p,{children:["By using ",(0,l.jsx)(s.code,{children:"styles.container"}),", ",(0,l.jsx)(s.code,{children:"styles.title"}),", and ",(0,l.jsx)(s.code,{children:"styles.button"}),", you are ensuring that the CSS class names are scoped locally to the components, preventing any conflicts with other styles."]}),"\n",(0,l.jsx)(s.h2,{id:"step-5-start-the-development-server",children:"Step 5: Start the development server"}),"\n",(0,l.jsx)(s.p,{children:"Save your changes and start the development server by running the following command in your project directory:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",metastring:'title="Terminal"',children:"cd my-app\nnpm start\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Now, you can visit ",(0,l.jsx)(s.code,{children:"http://localhost:3000"})," in your browser to see your React application with the CSS Modules styles applied."]}),"\n",(0,l.jsx)(t,{children:(0,l.jsxs)("div",{style:{maxWidth:"800px",margin:"0 auto"},children:[(0,l.jsx)("h1",{style:{fontSize:"24px",color:"#333"},children:"Welcome to My App"}),(0,l.jsx)("button",{style:{padding:"10px 20px",backgroundColor:"#007bff",color:"#fff",border:"none",borderRadius:"4px"},children:"Click me"})]})}),"\n",(0,l.jsx)(s.h2,{id:"create-a-css-modules-stylesheet",children:"Create a CSS Modules stylesheet"}),"\n",(0,l.jsxs)(s.p,{children:["First, create a new CSS file in the ",(0,l.jsx)(s.code,{children:"src"})," directory of your React project. For example, let's name it ",(0,l.jsx)(s.code,{children:"Button.module.css"}),". The ",(0,l.jsx)(s.code,{children:".module.css"})," extension is crucial, as it enables CSS Modules for that specific file."]}),"\n",(0,l.jsxs)(s.p,{children:["Add the following CSS code to your ",(0,l.jsx)(s.code,{children:"Button.module.css"})," file:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-css",metastring:'title="Button.module.css"',children:".error {\n  background-color: red;\n}\n"})}),"\n",(0,l.jsx)(s.h2,{id:"import-the-css-modules-stylesheet",children:"Import the CSS Modules stylesheet"}),"\n",(0,l.jsxs)(s.p,{children:["Next, open the component file where you want to use the CSS Modules styles. Import the CSS classes from the ",(0,l.jsx)(s.code,{children:"Button.module.css"})," file and apply them to your elements."]}),"\n",(0,l.jsxs)(s.p,{children:["For instance, in your ",(0,l.jsx)(s.code,{children:"Button.js"})," file, import the CSS classes as follows:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-javascript",metastring:'title="Button.jsx"',children:"import React, { Component } from 'react';\nimport styles from './Button.module.css';\n\nclass Button extends Component {\n  render() {\n    return <button className={styles.error}>Error Button</button>;\n  }\n}\n"})}),"\n",(0,l.jsxs)(s.p,{children:["In this example, the ",(0,l.jsx)(s.code,{children:"styles.error"})," class is applied to the button, which will give it a red background color."]}),"\n",(0,l.jsx)(s.h2,{id:"use-css-modules-and-regular-stylesheets-together",children:"Use CSS Modules and regular stylesheets together"}),"\n",(0,l.jsxs)(s.p,{children:["CSS Modules can coexist with regular stylesheets in your project. To demonstrate this, let's assume you have another regular stylesheet named ",(0,l.jsx)(s.code,{children:"another-stylesheet.css"})," that defines an ",(0,l.jsx)(s.code,{children:".error"})," class with different styles."]}),"\n",(0,l.jsxs)(s.p,{children:["To use the regular stylesheet, import it in your ",(0,l.jsx)(s.code,{children:"Button.js"})," file:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-javascript",children:"import './another-stylesheet.css';\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Now, the ",(0,l.jsx)(s.code,{children:"Button"})," component will have both the CSS Modules styles and the styles from the regular stylesheet."]}),"\n",(0,l.jsx)(s.h2,{id:"result",children:"Result"}),"\n",(0,l.jsxs)(s.p,{children:["When the ",(0,l.jsx)(s.code,{children:"Button"})," component is rendered, the CSS Modules class will automatically generate a unique class name, preventing clashes with other ",(0,l.jsx)(s.code,{children:".error"})," class names."]}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:"This button has a red background but not red text"})})}),"\n",(0,l.jsx)(t,{children:(0,l.jsx)("div",{children:(0,l.jsx)("button",{className:"error",children:"Error Button"})})}),"\n",(0,l.jsx)(s.p,{children:"CSS Modules provide a convenient and efficient way to manage styles in your React project, ensuring encapsulation and avoiding global style conflicts."}),"\n",(0,l.jsx)(s.admonition,{type:"note",children:(0,l.jsxs)(s.p,{children:["Using CSS Modules is optional. You can still use regular ",(0,l.jsx)(s.code,{children:"<link>"})," stylesheets and CSS files in your project. CSS Modules are only enabled for files with the ",(0,l.jsx)(s.code,{children:".module.css"})," extension."]})}),"\n",(0,l.jsx)(s.h2,{id:"live-coding",children:"Live Coding"}),"\n",(0,l.jsx)(s.h3,{id:"example-1",children:"Example-1:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-jsx",metastring:"live",live:!0,children:"function MyComponent() {\n  return (\n    <div style={{maxWidth: '800px', margin: '0 auto'}}>\n      <h1 style={{fontSize: '24px', color: '#333'}}>Welcome to My App</h1>\n      <button style={{padding: '10px 20px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '4px'}}>Click me</button>\n    </div>\n  );\n}\n"})}),"\n",(0,l.jsx)(s.h3,{id:"example-2",children:"Example-2:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-jsx",metastring:"live",live:!0,children:"class Button extends Component {\n  render() {\n    return <button style={{backgroundColor:'red'}}>Error Button</button>;\n  }\n}\n"})}),"\n",(0,l.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,l.jsx)(s.p,{children:"You've successfully learned how to add a CSS Modules stylesheet to your Create React App project. By using CSS Modules, you can manage your styles in a modular and scoped manner, preventing naming clashes and ensuring encapsulation."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(96540);const l={},r=n.createContext(l);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);