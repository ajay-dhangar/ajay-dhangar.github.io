"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[83688],{56874:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"javascript/datatypes/primitive-data-types/boolean-in-javascript","title":"Boolean Data Types in JavaScript","description":"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods.","source":"@site/docs/javascript/datatypes/primitive-data-types/boolean-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/boolean-in-javascript","permalink":"/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/ajay-dhangar.github.io/edit/main/docs/javascript/datatypes/primitive-data-types/boolean-js.md","tags":[{"inline":true,"label":"JavaScript","permalink":"/docs/tags/java-script"},{"inline":true,"label":"Data Types","permalink":"/docs/tags/data-types"},{"inline":true,"label":"Primitive Data Types","permalink":"/docs/tags/primitive-data-types"},{"inline":true,"label":"Boolean","permalink":"/docs/tags/boolean"},{"inline":true,"label":"Boolean Data Type","permalink":"/docs/tags/boolean-data-type"},{"inline":true,"label":"Boolean Values","permalink":"/docs/tags/boolean-values"},{"inline":true,"label":"Boolean Methods","permalink":"/docs/tags/boolean-methods"},{"inline":true,"label":"Truthy and Falsy","permalink":"/docs/tags/truthy-and-falsy"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709047234000,"sidebarPosition":3,"frontMatter":{"id":"boolean-in-javascript","title":"Boolean Data Types in JavaScript","sidebar_label":"Boolean","sidebar_position":3,"tags":["JavaScript","Data Types","Primitive Data Types","Boolean","Boolean Data Type","Boolean Values","Boolean Methods","Truthy and Falsy"],"description":"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods."},"sidebar":"tutorialSidebar","previous":{"title":"String","permalink":"/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript"},"next":{"title":"Undefined","permalink":"/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript"}}');var l=a(74848),t=a(28453);const s={id:"boolean-in-javascript",title:"Boolean Data Types in JavaScript",sidebar_label:"Boolean",sidebar_position:3,tags:["JavaScript","Data Types","Primitive Data Types","Boolean","Boolean Data Type","Boolean Values","Boolean Methods","Truthy and Falsy"],description:"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods."},i=void 0,r={},c=[{value:"What is a Boolean in JavaScript?",id:"what-is-a-boolean-in-javascript",level:2},{value:"How to Create a Boolean in JavaScript?",id:"how-to-create-a-boolean-in-javascript",level:2},{value:"Boolean Values",id:"boolean-values",level:2},{value:"Boolean Methods",id:"boolean-methods",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Booleans are a primitive data type in JavaScript. They are used to represent logical values. JavaScript uses the ",(0,l.jsx)(n.code,{children:"Boolean"})," object to represent ",(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,l.jsx)(n.mermaid,{value:"graph TD;\n    A(Boolean)--\x3e|Logical Value| B(true);\n    A(Boolean)--\x3e|Logical Value| C(false);"}),"\n",(0,l.jsx)(n.h2,{id:"what-is-a-boolean-in-javascript",children:"What is a Boolean in JavaScript?"}),"\n",(0,l.jsxs)(n.p,{children:["In JavaScript, booleans are used to represent logical values. JavaScript uses the ",(0,l.jsx)(n.code,{children:"Boolean"})," object to represent ",(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"how-to-create-a-boolean-in-javascript",children:"How to Create a Boolean in JavaScript?"}),"\n",(0,l.jsx)(n.p,{children:"You can create a boolean in JavaScript using the following syntax:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Creating a Boolean in JavaScript"',children:"let isTrue = true;\nlet isFalse = false;\n"})}),"\n",(0,l.jsxs)(n.p,{children:["In the above example, ",(0,l.jsx)(n.code,{children:"isTrue"})," and ",(0,l.jsx)(n.code,{children:"isFalse"})," are booleans."]}),"\n",(0,l.jsx)(n.h2,{id:"boolean-values",children:"Boolean Values"}),"\n",(0,l.jsxs)(n.p,{children:["The boolean data type has only two possible values: ",(0,l.jsx)(n.code,{children:"true"})," and ",(0,l.jsx)(n.code,{children:"false"}),". For example:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Boolean Values"',children:"let isTrue = true;\nlet isFalse = false;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"boolean-methods",children:"Boolean Methods"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Boolean"})," object has several methods that are used to perform operations on boolean values. For example:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Boolean Methods"',children:'let isTrue = true;\nlet isFalse = false;\n\nconsole.log(isTrue.toString()); // Output: "true"\nconsole.log(isFalse.valueOf()); // Output: false\n'})}),"\n",(0,l.jsxs)(n.p,{children:["In the above example, the ",(0,l.jsx)(n.code,{children:"toString()"})," method is used to convert a boolean to a string, and the ",(0,l.jsx)(n.code,{children:"valueOf()"})," method is used to return the primitive value of a boolean."]}),"\n",(0,l.jsxs)(n.admonition,{title:"\ud83d\udcdd Note",type:"info",children:[(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Boolean"})," object is a wrapper for a boolean value. It is rarely used in practice, as booleans can be created directly without using the ",(0,l.jsx)(n.code,{children:"Boolean"})," object."]}),(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Boolean"})," object is not a constructor. It does not have a ",(0,l.jsx)(n.code,{children:"new"})," operator. It is a function that converts a value to a boolean."]}),(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Boolean"})," object has a single property: ",(0,l.jsx)(n.code,{children:"prototype"}),". It is the prototype for the ",(0,l.jsx)(n.code,{children:"Boolean"})," object."]}),(0,l.jsx)(n.p,{children:"for example:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Boolean Object"',children:"let isTrue = true;\nlet isFalse = false;\n\nconsole.log(Boolean(isTrue)); // Output: true\nconsole.log(Boolean(isFalse)); // Output: false\n"})}),(0,l.jsxs)(n.p,{children:["In the above example, the ",(0,l.jsx)(n.code,{children:"Boolean"})," object is used to convert a value to a boolean."]}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"1. What is truthy and falsy in JavaScript?"})}),(0,l.jsxs)(n.p,{children:['In JavaScript, a value is considered "falsy" if it converts to ',(0,l.jsx)(n.code,{children:"false"}),' when evaluated in a boolean context. The following values are considered "falsy" in JavaScript:']}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"false"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"0"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'""'})," (empty string)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"null"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"undefined"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NaN"})," (Not a Number)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"document.all"})," (an object that is present in Internet Explorer)"]}),"\n"]}),(0,l.jsx)(n.p,{children:'All other values are considered "truthy" in JavaScript.'}),(0,l.jsx)(n.p,{children:"For example:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Truthy and Falsy Values"',children:'let isTrue = true;\nlet isFalse = false;\n\nconsole.log(Boolean(isTrue)); // Output: true\nconsole.log(Boolean(isFalse)); // Output: false\nconsole.log(Boolean(0)); // Output: false\nconsole.log(Boolean("")); // Output: false\nconsole.log(Boolean(null)); // Output: false\nconsole.log(Boolean(undefined)); // Output: false\nconsole.log(Boolean(NaN)); // Output: false\nconsole.log(Boolean(document.all)); // Output: false\n'})}),(0,l.jsxs)(n.p,{children:["In the above example, the ",(0,l.jsx)(n.code,{children:"Boolean"})," object is used to convert values to booleans. The values ",(0,l.jsx)(n.code,{children:"0"}),", ",(0,l.jsx)(n.code,{children:'""'}),", ",(0,l.jsx)(n.code,{children:"null"}),", ",(0,l.jsx)(n.code,{children:"undefined"}),", ",(0,l.jsx)(n.code,{children:"NaN"}),", and ",(0,l.jsx)(n.code,{children:"document.all"}),' are considered "falsy" in JavaScript.']}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"2. Difference between truthy and falsy"})}),(0,l.jsxs)(n.p,{children:["The difference between truthy and falsy is that truthy values are considered ",(0,l.jsx)(n.code,{children:"true"})," when evaluated in a boolean context, while falsy values are considered ",(0,l.jsx)(n.code,{children:"false"})," when evaluated in a boolean context."]}),(0,l.jsx)(n.p,{children:"For example:"}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Truthy Values"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"true"}),": The boolean value ",(0,l.jsx)(n.code,{children:"true"}),' is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": The number ",(0,l.jsx)(n.code,{children:"1"}),' is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'"hello"'}),": The string ",(0,l.jsx)(n.code,{children:'"hello"'}),' is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"[]"}),' (empty array): An empty array is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"{}"}),' (empty object): An empty object is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"function() {}"}),' (empty function): An empty function is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"new Date()"}),': A new date is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Infinity"}),": The value ",(0,l.jsx)(n.code,{children:"Infinity"}),' is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-Infinity"}),": The value ",(0,l.jsx)(n.code,{children:"-Infinity"}),' is considered "truthy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3.14"}),": The number ",(0,l.jsx)(n.code,{children:"3.14"}),' is considered "truthy" in JavaScript.']}),"\n"]}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Falsy Values"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"false"}),": The boolean value ",(0,l.jsx)(n.code,{children:"false"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": The number ",(0,l.jsx)(n.code,{children:"0"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'""'}),' (empty string): An empty string is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"null"}),": The value ",(0,l.jsx)(n.code,{children:"null"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"undefined"}),": The value ",(0,l.jsx)(n.code,{children:"undefined"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NaN"}),": The value ",(0,l.jsx)(n.code,{children:"NaN"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0n"}),": The bigint value ",(0,l.jsx)(n.code,{children:"0n"}),' is considered "falsy" in JavaScript.']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-0"}),": The number ",(0,l.jsx)(n.code,{children:"-0"}),' is considered "falsy" in JavaScript.']}),"\n"]}),(0,l.jsx)(n.p,{children:"for example:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Truthy Values"',children:'let isTrue = true;\nconst num = 1;\nconst str = "hello";\nconst arr = [];\nconst obj = {};\nconst func = function() {};\nconst date = new Date();\nconst inf = Infinity;\nconst ninf = -Infinity;\nconst pi = 3.14;\n\nconsole.log(Boolean(isTrue)); // Output: true\nconsole.log(Boolean(num)); // Output: true\nconsole.log(Boolean(str)); // Output: true\nconsole.log(Boolean(arr)); // Output: true\nconsole.log(Boolean(obj)); // Output: true\nconsole.log(Boolean(func)); // Output: true\nconsole.log(Boolean(date)); // Output: true\nconsole.log(Boolean(inf)); // Output: true\nconsole.log(Boolean(ninf)); // Output: true\nconsole.log(Boolean(pi)); // Output: true\n'})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="Falsy Values"',children:'let isFalse = false;\nconst zero = 0;\nconst emptyStr = "";\nconst nul = null;\nconst undef = undefined;\nconst nan = NaN;\nconst bigZero = 0n;\nconst negZero = -0;\n\nconsole.log(Boolean(isFalse)); // Output: false\nconsole.log(Boolean(zero)); // Output: false\nconsole.log(Boolean(emptyStr)); // Output: false\nconsole.log(Boolean(nul)); // Output: false\nconsole.log(Boolean(undef)); // Output: false\nconsole.log(Boolean(nan)); // Output: false\nconsole.log(Boolean(bigZero)); // Output: false\nconsole.log(Boolean(negZero)); // Output: false\n'})})]}),"\n",(0,l.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,l.jsxs)(n.p,{children:["In this tutorial, you learned about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods. You also learned about the ",(0,l.jsx)(n.code,{children:"Boolean"})," object and its methods."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var o=a(96540);const l={},t=o.createContext(l);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);